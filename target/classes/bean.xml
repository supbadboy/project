<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <!--<bean id="accountservice" class="com.spring.service.impl.AccountServiceImpl"></bean>
    <bean id ="accountDao" class="com.spring.dao.impl.AccountDaoImpl"></bean>-->
    <!--把对象的创建交给spring来管理
    spring对bean的管理理解
    1.创建bea的三种方式
    2.bean对象的作用范围
    3.bean对象的生命周期-->

    <!--创建bean的第一种方式
    1.使用默认构造函数来创建,在spring的配置文件中使用bean标签,配以id和class属性之后,且没有其他属性和标签时
        采用的就是默认构造函数创建bean对象,此时如果类中没有默认构造函数,则对象无法创建-->
    <!--<bean id ="accountService" class="com.spring.service.impl.AccountServiceImpl"></bean>-->

    <!--创建bean的第二种方式
    2.使用普通工厂中的方法创建普通对象(使用某个类中的对象创建方式,并存入spring容器
    -->
    <!--bean id ="instanceFactory" class ="com.spring.factory.InstanceFactory" ></bean>

    <bean id ="accoutService" class="com.spring.service.impl.AccountServiceImpl" factory-bean="instanceFactory" factory-method="getInstance" ></bean>-->

    <!--创建bean的第三种方式
    3. 使用静态工厂中的方法创建普通对象-->
    <bean id="accountService" class="com.spring.factory.StaticFactory" factory-method="getInstance"></bean>

</beans>